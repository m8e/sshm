name: CI Pipeline

on:
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    name: CI (PHP 8.4)

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.4-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.4-

    - name: Install dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Check for security vulnerabilities
      run: composer audit

    - name: Check PHP syntax
      run: find . -name "*.php" -not -path "./vendor/*" -not -path "./node_modules/*" | xargs -n1 php -l

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Create SQLite database
      run: touch database/database.sqlite

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Run database migrations
      run: php artisan migrate --force

    - name: Clear Laravel and Filament caches
      run: |
        php artisan view:clear
        php artisan config:clear
        php artisan cache:clear
        php artisan optimize:clear

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache NPM packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install NPM dependencies
      run: npm ci

    - name: Compile assets
      run: npm run build

    - name: Run Laravel Pint (Code Formatting)
      run: ./vendor/bin/pint --test

    - name: Run Pest Tests
      run: php artisan test --parallel

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-php-8.4
        path: |
          storage/logs/
          tests/

    - name: Archive production artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: built-app
        path: |
          public/build/
          vendor/
          !vendor/*/tests/
          !vendor/*/test/
        retention-days: 7